name: üêº Pandas Basics Assignment Grading

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test-pandas-assignment:
    runs-on: ubuntu-latest

    env:
      PYTHON_VERSION: "3.11"

    steps:
      - name: üì• Checkout Assignment Code
        uses: actions/checkout@v4

      - name: üêç Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: üì¶ Install UV Package Manager
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: üîß Install Dependencies with UV
        run: |
          echo "üîç Installing project dependencies..."
          uv pip install --system -r requirements.txt

          # Install additional testing dependencies
          uv pip install --system pytest pytest-html pytest-json-report pytest-cov

          echo "‚úÖ Dependencies installed successfully!"

      - name: üìä Verify Data Setup
        run: |
          echo "üîç Verifying assignment data files..."

          if [ -d "data" ]; then
            echo "‚úÖ Data directory found"
            ls -la data/

            # Run data creation script if it exists
            if [ -f "data/create_sample_data.py" ]; then
              echo "üîÑ Running data creation script..."
              python data/create_sample_data.py
              echo "‚úÖ Sample data created"
            fi
          else
            echo "‚ö†Ô∏è No data directory found - assignments may use built-in datasets"
          fi

      - name: üîç Verify Assignment Structure
        run: |
          echo "üìã Verifying assignment file structure..."

          # Check for required files
          echo "üìÅ Required directories:"
          ls -la | grep -E "(src|tests|notebooks)" || echo "‚ö†Ô∏è Some directories may be missing"

          echo "üìÑ Python source files:"
          find src -name "*.py" 2>/dev/null | head -10 || echo "‚ö†Ô∏è No source files found in src/"

          echo "üß™ Test files:"
          find tests -name "*.py" 2>/dev/null | head -10 || echo "‚ö†Ô∏è No test files found in tests/"

          echo "üìä Jupyter notebooks:"
          find notebooks -name "*.ipynb" 2>/dev/null | head -5 || echo "‚ÑπÔ∏è No notebooks found"

      - name: üß™ Run Pandas Assignment Test Suite
        run: |
          echo "üöÄ Running automated test suite for Pandas functions..."

          # Run tests with comprehensive output
          python -m pytest tests/test_pandas_basics.py \
            -v \
            --tb=short \
            --html=test-results.html \
            --self-contained-html \
            --json-report \
            --json-report-file=test-results.json \
            --cov=src \
            --cov-report=html \
            --cov-report=term-missing
        continue-on-error: true

      - name: üìä Calculate Assignment Grade
        run: |
          echo "üìã Calculating assignment grade..."
          python scripts/calculate_grade.py --verbose --output grade-report.json

      - name: üìà Display Grade Summary
        run: |
          echo "üìä PANDAS ASSIGNMENT GRADE SUMMARY"
          echo "================================"
          if [ -f grade-report.json ]; then
            echo "Score: $ASSIGNMENT_SCORE/$POSSIBLE_POINTS points ($GRADE_PERCENTAGE%)"
            echo "Grade: $LETTER_GRADE"
            echo "Tests Passed: $TESTS_PASSED/$TESTS_TOTAL"
            echo "Functions Implemented: $FUNCTIONS_IMPLEMENTED/$TESTS_TOTAL"
            echo "Implementation Rate: $IMPLEMENTATION_RATE%"
            echo ""
            echo "üìù Skills Assessment:"
            echo "   ‚Ä¢ Data Loading: $DATA_LOADING_SKILL"
            echo "   ‚Ä¢ Data Filtering: $DATA_FILTERING_SKILL"
            echo "   ‚Ä¢ Statistical Analysis: $STATISTICAL_ANALYSIS_SKILL"
            echo "   ‚Ä¢ Data Integration: $DATA_INTEGRATION_SKILL"
            echo ""
            echo "üìù Grade report saved to grade-report.json"
            echo "üìä Test report saved to test-results.html"
          else
            echo "‚ùå Grade report not generated"
          fi

      - name: üìé Upload Grade Report
        uses: actions/upload-artifact@v4
        with:
          name: pandas-basics-grade-report
          path: |
            grade-report.json
            test-results.html
            test-results.json
            htmlcov/
          retention-days: 30

      - name: üìä Upload Assignment Code
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pandas-basics-submission
          path: |
            src/*.py
            notebooks/*.ipynb
            tests/*.py
          retention-days: 30

      - name: üéØ Set Job Status Based on Grade
        run: |
          if [ "$GRADE_PERCENTAGE" ]; then
            grade_num=$(echo $GRADE_PERCENTAGE | cut -d'.' -f1)
            if [ "$grade_num" -ge 70 ]; then
              echo "‚úÖ Assignment passed with $GRADE_PERCENTAGE% (Grade: $LETTER_GRADE)"
              exit 0
            else
              echo "‚ùå Assignment did not meet minimum requirements: $GRADE_PERCENTAGE% (Grade: $LETTER_GRADE)"
              echo "üí° Minimum passing grade is 70%"
              echo "üìö Review implementation requirements and test your functions locally"
              exit 1
            fi
          else
            echo "‚ö†Ô∏è Could not determine grade - check assignment files"
            exit 1
          fi

      - name: üîç Debug Information (On Failure)
        if: failure()
        run: |
          echo "üêõ DEBUG INFORMATION"
          echo "==================="
          echo "üìÅ Assignment files:"
          ls -la src/*.py 2>/dev/null || echo "No Python files found in src/ directory"
          echo ""
          echo "üß™ Test files:"
          ls -la tests/*.py 2>/dev/null || echo "No test files found in tests/ directory"
          echo ""
          echo "üìä Jupyter notebooks:"
          ls -la notebooks/*.ipynb 2>/dev/null || echo "No notebooks found in notebooks/ directory"
          echo ""
          echo "üåê Environment variables:"
          env | grep -E "(ASSIGNMENT|GRADE|TEST|FUNCTION)" | sort
          echo ""
          echo "üêç Python packages:"
          python -m pip list | grep -E "(pandas|numpy|matplotlib)"

      - name: üéì Professional Context Summary
        if: always()
        run: |
          echo ""
          echo "üéì PROFESSIONAL DEVELOPMENT CONTEXT"
          echo "==================================="
          echo "‚úÖ Skills Assessed:"
          echo "   ‚Ä¢ Pandas DataFrame operations and data manipulation"
          echo "   ‚Ä¢ Data loading, exploration, and quality assessment"
          echo "   ‚Ä¢ Data filtering and querying with boolean indexing"
          echo "   ‚Ä¢ Statistical analysis and aggregation operations"
          echo "   ‚Ä¢ Multi-dataset integration with joins and merges"
          echo ""
          echo "üè¢ Industry Relevance:"
          echo "   ‚Ä¢ Foundation for data analyst and business intelligence roles"
          echo "   ‚Ä¢ Essential for environmental data analysis and reporting"
          echo "   ‚Ä¢ Critical for GIS data preprocessing and quality control"
          echo "   ‚Ä¢ Direct preparation for geospatial data science positions"
          echo ""
          echo "üöÄ Career Applications:"
          echo "   ‚Ä¢ Environmental monitoring data analysis"
          echo "   ‚Ä¢ Urban planning demographic studies"
          echo "   ‚Ä¢ Real estate market analysis and reporting"
          echo "   ‚Ä¢ Transportation planning and logistics optimization"
          echo ""
          echo "üìà Next Steps:"
          echo "   ‚Ä¢ Ready for GeoPandas vector spatial analysis"
          echo "   ‚Ä¢ Prepared for advanced spatial data manipulation"
          echo "   ‚Ä¢ Foundation for web-based geospatial applications"
          echo ""
          echo "üí° Professional Tip: These Pandas skills are used in 90% of GIS data workflows!"
